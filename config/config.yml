vagrant:
    api_version: "2"
    host: detect

vm:
    # http://www.vagrantbox.es/
    box: "ubuntu64"
    box_url: "https://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box"
    hostname: null
    usable_port_range: 2200..2500
    network:
        private_network: 192.168.100.100 # TODO use this ip address in php code dynamically
        forwarded_ports:
            # ssh is set by default - overwriting this can lead to unexpected behavior
            #ssh:
            #    host: 2222
            #    guest: 22
            http:
                host: 8080
                guest: 80
            ssh-extra:
                host: 8433
                guest: 433
    provider:
        virtualbox:
            memory: 2048
            cpus: 1
            modifyvm:
                name: devmachine
                # natdnsproxy1: on
                natdnshostresolver1: on
                # rtcuseutc: on # bugfix ssh connection - https://github.com/mitchellh/vagrant/issues/391
                memory: '2048'
            gui: false
            setextradata:
                VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root: 1
            check_guest_additions: false
            functional_vboxsf: false
    provision:
        dos2unix:
            type: shell
            windows_only: true
            inline: 'apt-get install -y dos2unix && find /env/config/* /env/shell/scripts/* /env/docker/containers/* -name "*.sh" -exec dos2unix --keepdate --quiet {} \; && find /env/php/* -name "provision.sh" -exec dos2unix --keepdate --quiet {} \;'
        provision:
            type: shell
            path: ./provision.sh
            upload_path: /env/provision.sh
            keep_color: true
        unix2dos:
            type: shell
            windows_only: true
            inline: 'find /env/config/* /env/shell/scripts/* /env/docker/containers/* -name "*.sh" -exec unix2dos --keepdate --quiet {} \; && find /env/php/* -name "provision.sh" -exec unix2dos --keepdate --quiet {} \;'
    synced_folder:
        # TODO http://jeremykendall.net/2013/08/09/vagrant-synced-folders-permissions/
        # TODO http://www.sebastien-han.fr/blog/2012/12/18/noac-performance-impact-on-web-applications/
        # Having the /environment folder with the same group setting as that
        # of the apache2 process' group ensures that Apache2 can access and modify
        # files under it, without explicitly chmod-ing them to 777
        # This only works for the default provider
        # - With nfs we cannot set the group for the directory,
        # and php5-fpm will probably not be able to read the files.
        # - With rsync two-way sync is not possible
        environment:
            source: ./
            target: /env
#            owner: vagrant
#            group: www-data
            type: nfs
        php:
            source: ./php
            target: /var/www
            type: nfs

ssh:
    host: null
    port: null
    private_key_path: null
    username: vagrant # https://github.com/Varying-Vagrant-Vagrants/VVV/issues/375
    guest_port: null
    keep_alive: true
    forward_agent: false
    forward_x11: false
    shell: "bash -c 'BASH_ENV=/etc/profile exec bash'" # default: "bash -l", but this resolves the stdin error