DONE move composer to docker: http://marmelab.com/blog/2014/09/10/make-docker-command.html
DONE add php 5.6 and 7
DONE add specific php.ini
DONE Upgrade from apache 2.2 to apache 2.4 https://httpd.apache.org/docs/2.4/upgrading.html
DONE install composer in the composer container, running the php version that gets linked to it?
DONE put the php-fpm config in the php-fpm docker directory, not in the lamp run file (add it with -c without newlines?)
DONE add php.ini settings (date.timezone, display_errors, error_reporting, session.save_path)
DONE rename docker-provision to provision-docker-compose.sh
DONE use dos2unix to run shell script
IGNORE use vagrant docker provisioning
IGNORE  containers without a build.sh should have a .version file, to make sure they rebuild when anything changes in them

TODO site: extract template from index.php
TODO site: ping docker machines on index page with javascript, use colored icons
TODO site: add provisioning for devmachine workspace
TODO site: add vrana/adminer as composer project
TODO site: add logs page to show apache, php and docker logs in backend
TODO site: list workspaces with their corresponding url and port, and if they are reachable or not
TODO site: switch different environments, urls, ports, to reach certain page
TODO site: add javascript issue tracker in backend
TODO site: show latest docker report on home screen from devmachine
TODO site: report devmachine version, and if latest version was installed (git api?)

TODO vagrant: report devmachine version
TODO vagrant: enable/disable certain workspaces in config (but scan all if no config is available)
TODO vagrant: add provision inside project, so only that project gets scanned (including the whole containers and vagrant)
TODO vagrant: --provision-with system,workspace:stagesol
TODO vagrant: report only containers inside workspace if workspace is specified
TODO vagrant: add docker container checker to vagrant, so after vagrant up, workspaces that should be active become automatically active and stay active, when containers crash
TODO vagrant: report on all containers inside docker, combine docker-compose ps and docker ps -a in one big overview
TODO vagrant: automatically open url on host machine after provisioning
TODO vagrant: add virtualhosts files in project, and automagically add those to the server
TODO vagrant: check in provision.sh if vagrant is running and script runs in vagrant, otherwise start vagrant, and automagically run provisioning
TODO vagrant: add cleanup shell scripts to remove all files
TODO vagrant: add time loaded per container, and overall
TODO vagrant: use CoreOS container, with docker pre-installed
TODO vagrant: create a dhcp container, giving all the other containers a fixed internal ip address

TODO docker: add ssh container to access php, to directly ssh to app/console and/or xdebug
TODO docker: add auto-completion for docker: https://docs.docker.com/compose/completion/
TODO docker: rename common.yml to containers.yml
TODO docker: use an sql file to load during provisioning
TODO docker: install nginx, apache 2.2, hhvm, phpmyadmin, xdebug, git, openssl, node, npm, grunt, xhprof, memcache, redis, elasticsearch, apc, varnish, webgrind, closure
TODO docker: persist databases to a system data container
TODO docker: persist /var/lib/docker to a system data container

TODO ansible: add common.sh scripts to ansible as plugins

TODO apache: add server aliases

TODO php: use environment to name logs and log directory
TODO php: add php.ini variables through environment

TODO LATER use rsync https://servercheck.in/blog/rsync-vagrant-15-file-performance-windows-dev
TODO LATER also update already installed programs

TODO CLEAN http://mywiki.wooledge.org/Bashism
TODO CHECK https://github.com/coreos/coreos-vagrant/blob/master/Vagrantfile
